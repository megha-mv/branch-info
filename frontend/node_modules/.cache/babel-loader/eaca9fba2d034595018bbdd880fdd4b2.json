{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megha\\\\Desktop\\\\assignment\\\\frontend\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Register = () => {\n  _s();\n\n  const history = useHistory();\n  const initial = {\n    pincode: \"\",\n    branchName: \"\",\n    place: \"\",\n    name: \"\",\n    password: \"\",\n    cpassword: \"\"\n  };\n  const [branchInfo, setBranchInfo] = useState(initial);\n  let name, value;\n\n  const handleInputs = e => {\n    // console.log(e);\n    name = e.target.name;\n    value = e.target.value;\n    setBranchInfo({ ...branchInfo,\n      [name]: value\n    });\n    console.log(branchInfo);\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      branchName,\n      pincode,\n      place,\n      UserName,\n      email,\n      password,\n      cpassword\n    } = branchInfo;\n    const res = await fetch(\"branches\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        branchName,\n        pincode,\n        place,\n        UserName,\n        email,\n        password,\n        cpassword\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 422 || !data) {\n      window.alert(\"Registration Failed\");\n      console.log(\"Registration failed\");\n    } else {\n      window.alert(\"Registration Successful\");\n      console.log(\"Registration Successful\");\n      history.push(\"/Login\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"From Register Page\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Pincode\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"pincode\",\n    id: \"pincode\",\n    value: branchInfo.pincode,\n    placeholder: \"Enter pincode\",\n    onChange: handleInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"BranchName\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"branchName\",\n    id: \"branchName\",\n    value: branchInfo.branchName,\n    placeholder: \"Enter branch Name\",\n    onChange: handleInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Place\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"place\",\n    id: \"place\",\n    value: branchInfo.place,\n    placeholder: \"Enter place of branch\",\n    onChange: handleInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"User Name :\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    value: branchInfo.name,\n    placeholder: \"Enter User Name\",\n    onChange: handleInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: branchInfo.password,\n    placeholder: \"Enter password you want to assign\",\n    onChange: handleInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"cpassword\",\n    name: \"cpassword\",\n    id: \"cpassword\",\n    value: branchInfo.cpassword,\n    placeholder: \"Enter password again\",\n    onChange: handleInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: PostData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\n_s(Register, \"CniXAroAveaooEHiC/uAGlrjXJg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/megha/Desktop/assignment/frontend/src/components/Register.js"],"names":["React","useState","useHistory","Register","history","initial","pincode","branchName","place","name","password","cpassword","branchInfo","setBranchInfo","value","handleInputs","e","target","console","log","PostData","preventDefault","UserName","email","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const initial = {\r\n    pincode: \"\",\r\n    branchName: \"\",\r\n    place: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    cpassword: \"\",\r\n  };\r\n  const [branchInfo, setBranchInfo] = useState(initial);\r\n\r\n  let name, value;\r\n\r\n  const handleInputs = (e) => {\r\n    // console.log(e);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setBranchInfo({ ...branchInfo, [name]: value });\r\n    console.log(branchInfo);\r\n  };\r\n\r\n  const PostData = async (e) =>{\r\n\r\n    e.preventDefault();\r\n    const {branchName,pincode,place,UserName,email,password,cpassword} = branchInfo;\r\n\r\n    const res = await fetch(\"branches\",{\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        branchName,pincode,place,UserName,email,password,cpassword\r\n      })\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if(data.status === 422 || !data){\r\n      window.alert(\"Registration Failed\")\r\n      console.log(\"Registration failed\");\r\n    } else {\r\n      window.alert(\"Registration Successful\")\r\n      console.log(\"Registration Successful\"); \r\n\r\n      history.push(\"/Login\");\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>From Register Page</h1>\r\n      <div>\r\n        <form method=\"POST\">\r\n          <label>Pincode</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"pincode\"\r\n            id=\"pincode\"\r\n            value={branchInfo.pincode}\r\n            placeholder=\"Enter pincode\"\r\n            onChange={handleInputs}\r\n          ></input>\r\n          <label>BranchName</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"branchName\"\r\n            id=\"branchName\"\r\n            value={branchInfo.branchName}\r\n            placeholder=\"Enter branch Name\"\r\n            onChange={handleInputs}\r\n          ></input>\r\n          <label>Place</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"place\"\r\n            id=\"place\"\r\n            value={branchInfo.place}\r\n            placeholder=\"Enter place of branch\"\r\n            onChange={handleInputs}\r\n          ></input>\r\n          <label>User Name :</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={branchInfo.name}\r\n            placeholder=\"Enter User Name\"\r\n            onChange={handleInputs}\r\n          ></input>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={branchInfo.password}\r\n            placeholder=\"Enter password you want to assign\"\r\n            onChange={handleInputs}\r\n          ></input>\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"cpassword\"\r\n            name=\"cpassword\"\r\n            id=\"cpassword\"\r\n            value={branchInfo.cpassword}\r\n            placeholder=\"Enter password again\"\r\n            onChange={handleInputs}\r\n          ></input>\r\n        </form>\r\n        <button onClick={PostData}>Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}